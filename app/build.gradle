apply plugin: 'com.android.application'
//ext.appReleaseDir = "D:/dyj/"

def static getDate() {
    def date = new Date()
    def formattedDate = date.format('MMddHHmmss')
    return formattedDate
}

android {
    signingConfigs {
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STOREFILE)
            storePassword RELEASE_STORE_PASSWORD
            setV1SigningEnabled(true)
            setV2SigningEnabled(true)
        }
    }
    buildToolsVersion "28.0.3"
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.b1b.js.erpandroid_kf"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 64
        versionName "7.2"
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
    }
    /*buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }*/
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFile 'proguard-rules.txt'
            signingConfig signingConfigs.release
            zipAlignEnabled true
            android.applicationVariants.all { variant ->
                File relaseDir = new File("D:\\dyj\\app")
                File f = new File(relaseDir, "dyj_kf\\apk")
                if (!f.exists()) {
                    f.mkdirs()
                }
                def pkApp = variant.getPackageApplicationProvider().get()
                //    var pkApp = variant.getPackageApplication()//3.3以前gradle, 2019被移除
                if (variant.buildType.name != "debug") {//防止AS无法安装debug包(apk)
                    pkApp.outputDirectory = f
                }
                def defaultConfig = android["defaultConfig"]
                def tarApiVersion = defaultConfig["targetSdkVersion"]
                pkApp.outputScope.apkDatas.forEach { apkData ->
                    //这个修改输出APK的文件名
                    apkData.outputFileName = "dyjkf_" +
                            variant.versionName + "_" +
                            variant.versionCode + "_t" + tarApiVersion["mApiLevel"] +
                            ".apk"
                }
            }
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            /* resValue 'string', 'app_name', '大赢家kf_debug'*/
            minifyEnabled false
            proguardFiles 'proguard-rules.txt'
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }
        }
    }
    packagingOptions {
        pickFirst 'META-INF/*' // picks the JavaMail license file
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation files('libs/ksoap2-android-assembly-2.6.0-jar-with-dependencies.jar')
    implementation 'commons-net:commons-net:3.6'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    api('com.rengwuxian.materialedittext:library:2.1.4')
            {
                exclude group: 'com.android.support'
            }
    implementation 'me.drakeet.materialdialog:library:1.3.1'
    implementation 'com.joanzapata.pdfview:android-pdfview:1.0.4@aar'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    //需要添加so libBarcode.so
    implementation fileTree(dir: 'libs', include: ['*.aar'])
//    implementation project(':redlinescan')
    implementation('me.dm7.barcodescanner:zbar:1.9.13', {
        exclude group: 'com.android.support'
//        , module: 'support-annotations'
    })
//    邮件发送
    implementation 'com.sun.mail:android-mail:1.5.6'
    implementation 'com.sun.mail:android-activation:1.5.6'
    implementation 'com.alibaba:fastjson:1.2.58'
}
