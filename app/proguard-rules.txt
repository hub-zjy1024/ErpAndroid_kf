-keep public class * extends android.app.Activity  #所有activity的子类不要去混淆
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class * extends android.support.**
-dontwarn android.support.**
-dontnote android.support.**
-dontnote android.net.http.**
-dontnote org.apache.http.**
-keep,includedescriptorclasses class android.support.**{ *; }
-keep interface android.support.** { *; }
-keep public class * extends android.support.**
-keep public class * extends android.app.Fragment
-keepattributes Annotation    #保护注解
-keepclasseswithmembernames public class * {
    native <methods>;  #保持 native 的方法不去混淆
}
-keepattributes InnerClasses
-keepattributes Signature*  #过滤泛型（不写可能会出现类型转换错误，一般情况把这个加上就是了,需要-keepattributes InnerClasses配合）

-keepattributes *Annotation*  #假如项目中有用到注解，应加入这行配置

-keep class **.R$* { *; }  #保持R文件不被混淆，否则，你的反射是获取不到资源id的

-keepclasseswithmembers public class * {
    public <init>(android.content.Context, android.util.AttributeSet);  #保持自定义控件类不被混淆，指定格式的构造方法不去混淆
}

-keepclasseswithmembers public class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}

-keepclassmembers public class * extends android.app.Activity {
    public void *(android.view.View); #保持指定规则的方法不被混淆（Android layout 布局文件中为控件配置的onClick方法不能混淆）
}

-keep public class * extends android.view.View {  #保持自定义控件指定规则的方法不被混淆
    public <init>(android.content.Context);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
    public void set*(...);
}

-keepclassmembers enum * {  #保持枚举 enum 不被混淆
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keep class * implements android.os.Parcelable {  #保持 Parcelable 不被混淆（aidl文件不能去混淆）
    public static final android.os.Parcelable$Creator *;
}

-keepnames class * implements java.io.Serializable #需要序列化和反序列化的类不能被混淆（注：Java反射用到的类也不能被混淆）

-keepclassmembers class * implements java.io.Serializable { #保护实现接口Serializable的类中，指定规则的类成员不被混淆
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    !static !transient <fields>;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}


-keep class **.Webview2JsInterface { *; }  #保护WebView对HTML页面的API不被混淆
-keepclassmembers class * extends android.webkit.WebViewClient {  #如果你的项目中用到了webview的复杂操作 ，最好加入
     public void *(android.webkit.WebView,java.lang.String,android.graphics.Bitmap);
     public boolean *(android.webkit.WebView,java.lang.String);
}
-keepclassmembers class * extends android.webkit.WebChromeClient {  #如果你的项目中用到了webview的复杂操作 ，最好加入
     public void *(android.webkit.WebView,java.lang.String);
}
#对WebView的简单说明下：经过实战检验,做腾讯QQ登录，如果引用他们提供的jar，若不加防止WebChromeClient混淆的代码，oauth认证无法回调，反编译基代码后可看到他们有用到WebChromeClient，加入此代码即可。

-keepclassmembernames class com.b1b.js.erpandroid_kf.entity.** { *; }  #转换JSON的JavaBean，类成员名称保护，使其不被混淆
-keep class com.b1b.js.erpandroid_kf.adapter.TableAdapter$TableRow  #转换JSON的JavaBean，类成员名称保护，使其不被混淆

##################################################################
# 下面都是项目中引入的第三方 jar 包。第三方 jar 包中的代码不是我们的目标和关心的对象，故而对此我们全部忽略不进行混淆。
##################################################################
-keep class org.vudroid.core.** { *; }
-keep class org.apache.commons.net.**{*;}
-dontwarn  com.squareup.picasso.OkHttpDownloader
-keep,includedescriptorclasses class com.squareup.** { *;}
#-includedescriptorclasses public class com.squareup.picasso.** { *; }
-keep class com.rengwuxian.materialedittext.** {  *;}
-keep class org.vudroid.** {  *;}
-dontwarn com.android.dev.**
-dontwarn com.android.scan.**
-keep class com.android.dev.** {*;}
#-keep class org.kobjects.** {*;}
#ksoap2-android-assembly-2.6.0-jar-with-dependencies.jar中重复添加org.xmlpull.v1包和libaray中自带的冲突
-dontwarn org.xmlpull.v1.**
-keep class org.xmlpull.v1.**{*;}
#zbar混淆
-keep class me.dm7.barcodescanner.core.**{*;}
-keep class me.dm7.barcodescanner.zbar.**{*;}
-keep class net.sourceforge.zbar.** { *; }
-keep class com.b1b.js.erpandroid_kf.scancode.zxing.view.**{*;}
-keep class com.google.zxing.**{*;}
#mail混淆
-keep class com.sun.mail.**{*;}
-keep class javax.mail.**{*;}
-keep class javax.activation.**{*;}
-keep class java.awt.datatransfer.**{*;}

-keep class org.apache.** { *; }
-keep class com.sun.** { *; }
-dontwarn com.sun.mail.handlers.handler_base
#fastJson
-keep class com.alibaba.fastjson.** { *; }
-dontwarn com.alibaba.fastjson.**
-dontnote com.alibaba.fastjson.**
#让实体类实现Serializable，避免json解析异常
-keep class * implements java.io.Serializable { *; }

-dontnote org.xmlpull.v1.**
-dontnote org.kobjects.util.**
-dontnote com.squareup.**
-dontnote com.b1b.js.erpandroid_kf.dtr.zxing.activity.CaptureActivity
-keep class com.android.scan.** {*;}
-keep class com.b1b.js.erpandroid_kf.adapter.TableAdapter{*;}
-keep class com.shockwave.**
#其他配置
#混淆前后名称对照
-dump D:\dyj\app\dyj_app\dyj_kf\mapping\class_files.txt
#未混淆的类和成员
-printseeds D:\dyj\app\dyj_app\dyj_kf\mapping\seeds.txt
#列出从 apk 中删除的代码
-printusage D:\dyj\app\dyj_app\dyj_kf\mapping\unused.txt
#混淆前后的映射
-printmapping D:\dyj\app\dyj_app\dyj_kf\mapping\mapping.txt
